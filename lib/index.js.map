{"version":3,"sources":["../src/index.js"],"names":["log","ctx","next","request","response","time","Date","now","statusCode","status","responseTime","Math","ceil","requestLog","toISOString","response_time","req","method","toUpperCase","url","headers","accept","host","ip","res","console","JSON","stringify"],"mappings":";;;;;;;AAAO,MAAMA,GAAG,GAAG,OAAOC,GAAP,EAAYC,IAAZ,KAAqB;AACtC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAwBH,GAA9B;AACA,QAAMI,IAAI,GAAGC,IAAI,CAACC,GAAL,EAAb;AACA,MAAIC,UAAJ;;AACA,MAAI,OAAON,IAAP,KAAgB,UAApB,EAAgC;AAC9B,UAAMA,IAAI,EAAV;AACAM,IAAAA,UAAU,GAAGJ,QAAQ,CAACK,MAAtB;AACD,GAHD,MAGO;AACL;AACAD,IAAAA,UAAU,GAAGN,IAAI,CAACM,UAAlB;AACD;;AACD,QAAME,YAAY,GAAGC,IAAI,CAACC,IAAL,CAAUN,IAAI,CAACC,GAAL,KAAaF,IAAvB,CAArB;AACA,QAAMQ,UAAU,GAAG;AACjBR,IAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASD,IAAT,EAAeS,WAAf,EADW;AAEjBC,IAAAA,aAAa,EAAEL,YAFE;AAGjBM,IAAAA,GAAG,EAAE;AACHC,MAAAA,MAAM,EAAEd,OAAO,CAACc,MAAR,CAAeC,WAAf,EADL;AAEHC,MAAAA,GAAG,EAAEhB,OAAO,CAACgB,GAFV;AAGHC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAElB,OAAO,CAACiB,OAAR,CAAgBC,MADjB;AAEPC,QAAAA,IAAI,EAAEnB,OAAO,CAACiB,OAAR,CAAgBE,IAFf;AAGP,sBAAcnB,OAAO,CAACiB,OAAR,CAAgB,YAAhB,CAHP;AAIP,2BAAmBjB,OAAO,CAACiB,OAAR,CAAgB,iBAAhB,KAAsCjB,OAAO,CAACoB;AAJ1D;AAHN,KAHY;AAajBC,IAAAA,GAAG,EAAE;AACHhB,MAAAA;AADG;AAbY,GAAnB;AAiBAiB,EAAAA,OAAO,CAACzB,GAAR,CAAY0B,IAAI,CAACC,SAAL,CAAed,UAAf,CAAZ;AACD,CA9BM;;;;eA+BQ,MAAM;AACnB,SAAO,OAAOZ,GAAP,EAAYC,IAAZ,KAAqB;AAC1B,UAAMF,GAAG,CAACC,GAAD,EAAMC,IAAN,CAAT;AACD,GAFD;AAGD,C","sourcesContent":["export const log = async (ctx, next) => {\n  const { request, response } = ctx;\n  const time = Date.now();\n  let statusCode;\n  if (typeof next === \"function\") {\n    await next();\n    statusCode = response.status;\n  } else {\n    // next is an error object;\n    statusCode = next.statusCode;\n  }\n  const responseTime = Math.ceil(Date.now() - time);\n  const requestLog = {\n    time: new Date(time).toISOString(),\n    response_time: responseTime,\n    req: {\n      method: request.method.toUpperCase(),\n      url: request.url,\n      headers: {\n        accept: request.headers.accept,\n        host: request.headers.host,\n        \"user-agent\": request.headers[\"user-agent\"],\n        \"x-forwarded-for\": request.headers[\"x-forwarded-for\"] || request.ip\n      }\n    },\n    res: {\n      statusCode\n    }\n  };\n  console.log(JSON.stringify(requestLog));\n};\nexport default () => {\n  return async (ctx, next) => {\n    await log(ctx, next);\n  };\n};\n"],"file":"index.js"}